## >链表与递归：

~~

 1. >本质上就是将原本的问题，转换成更小的问题，当转换的不能再小了，通常问题就解决啦。例如数组求和（虽然没必要用递归，但是好理解递归程序）
 2. >大部分递归算法都会有的结构：
           >public static int sum(int[] arr,int l){
           >if(l==arr.iength)
           >     return 0;          -----求解最基本问题
           > return arr[l]+sum(arr,l+1);    ------把原问题转换成更小的问题
           > }
 3. 链表具有天然的递归性。
 4. > 递归调用其实就是一个子过程的调用，不过我们调用的子过程和原逻辑是一样而已。
    > 递归调用是有代价的，最基本的就是对系统栈的使用

